{"version":3,"sources":["imgs/pjimage.jpg","imgs/not-ritual.png","imgs/interview.png","imgs/ruby.png","components/SocialIcons/SocialIcons.jsx","utils/scroll.js","components/Nav/Nav.jsx","pages/LandingPage/LandingPage.jsx","components/PortfolioItem/PortfolioItem.jsx","components/PortfolioItem/portfolioitems.js","components/ProjectCarousel/ProjectCarousel.jsx","pages/ProjectsPage/ProjectsPage.jsx","components/ParallaxBackground/ParallaxBackground.jsx","components/ThemeControl/themes.js","components/ThemeControl/ThemeControl.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","SocialIcons","props","context","colorPrimary","theme","className","href","style","color","icon","contextTypes","PropTypes","any","isSmoothScrollSupported","document","documentElement","toElement","element","scrollIntoView","behavior","block","Nav","handleScroll","bind","state","isSticky","window","addEventListener","this","removeEventListener","pageYOffset","nav","offsetTop","setState","pageSelector","nextPage","querySelector","scrollToElement","bgPrimary","navAlpha","switchTheme","stickyClass","stickyStyles","backgroundColor","ref","elem","onClick","e","faMagic","jsx","scrollToPage","textDecoration","Component","func","LandingPage","PortfolioItem","textAlternate","render","title","desc","techStack","githubLink","liveLink","img","weQuest","Ritual","Ruby","Interview","ProjectCarousel","visibleSlides","totalSlides","step","naturalSlideWidth","naturalSlideHeight","infinite","portfolioItems","map","item","index","renderPortfolioItem","faAngleLeft","faAngleRight","ProjectsPage","tech","ParallaxBackground","id","themes","name","firstTime","colorAlternate","colorHighlight","textPrimary","getThemes","bgAlternate","bgLanding","textLanding","parallaxStars","ThemeSwitcher","getRandomTheme","currentTheme","themesWithoutCurrentTheme","filter","Math","floor","random","length","randomTheme","firstTimeThemes","children","childContextTypes","library","add","fab","faCheckSquare","App","ThemeControl","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6053c1d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pjimage.dca3cd9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/not-ritual.68ec6996.png\";","module.exports = __webpack_public_path__ + \"static/media/interview.cdf4d4e5.png\";","module.exports = __webpack_public_path__ + \"static/media/ruby.0ac0ab67.png\";","import React from 'react';\nimport './SocialIcons.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SocialIcons = (props, context) => {\n  const {\n    theme: { colorPrimary },\n  } = context;\n  return (\n    <div className='social-icons animate-icons'>\n      <a href='https://github.com/checksonhk'>\n        <FontAwesomeIcon className='icons-social' style={{ color: colorPrimary }} icon={['fab', 'github']} />\n      </a>\n      <a href='https://stackoverflow.com/story/checksonhk'>\n        <FontAwesomeIcon className='icons-social' style={{ color: colorPrimary }} icon={['fab', 'stack-overflow']} />\n      </a>\n      <a href='https://www.linkedin.com/in/jackson-to-605686181/'>\n        <FontAwesomeIcon className='icons-social' style={{ color: colorPrimary }} icon={['fab', 'linkedin']} />\n      </a>\n    </div>\n  );\n};\n\nSocialIcons.contextTypes = {\n  theme: PropTypes.any,\n};\n\nexport default SocialIcons;\n","const isSmoothScrollSupported = ((document || {}).documentElement || {}).style ? 'scrollBehavior' in document.documentElement.style : false;\n\nexport const toTop = function() {\n  if (isSmoothScrollSupported) {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  } else {\n    window.scrollTo(0, 0);\n  }\n};\n\nexport const to = function(ycoordinate) {\n  if (isSmoothScrollSupported) {\n    window.scroll({\n      top: ycoordinate,\n      left: 0,\n      behavior: 'smooth',\n    });\n  } else {\n    window.scrollTo(0, ycoordinate);\n  }\n};\n\nexport const toElement = function(element) {\n  if (element) {\n    if (isSmoothScrollSupported) {\n      element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n      });\n    } else {\n      element.scrollIntoView();\n    }\n  }\n};\n\nexport default {\n  toTop,\n  to,\n  toElement,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagic } from '@fortawesome/free-solid-svg-icons';\nimport { toElement as scrollToElement } from '../../utils/scroll';\n\nimport './styles.scss';\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.state = {\n      isSticky: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    if (window.pageYOffset > this.nav.offsetTop) {\n      this.setState({\n        isSticky: true,\n      });\n    } else {\n      this.setState({\n        isSticky: false,\n      });\n    }\n  }\n\n  scrollToPage(pageSelector) {\n    const nextPage = document.querySelector(pageSelector);\n    scrollToElement(nextPage);\n  }\n\n  render() {\n    const {\n      theme: { colorPrimary, bgPrimary, navAlpha },\n      switchTheme,\n    } = this.context;\n\n    const stickyClass = this.state.isSticky ? 'sticky' : '';\n    const stickyStyles = this.state.isSticky\n      ? { backgroundColor: navAlpha, color: colorPrimary }\n      : { backgroundColor: bgPrimary, color: colorPrimary };\n    return (\n      <nav\n        className={stickyClass}\n        ref={elem => {\n          this.nav = elem;\n        }}\n        style={stickyStyles}>\n        <div className='magic-wand bounce-xy' onClick={e => switchTheme()}>\n          <FontAwesomeIcon icon={faMagic} href='#' />\n          {/* <button className='fas fa-magic fa-lg' href='#' /> */}\n          <div className='magic-text'>Color Me</div>\n        </div>\n        <style jsx='true'>\n          {`\n            .menu__item:hover {\n              border-bottom: 2px solid ${colorPrimary};\n            }\n          `}\n        </style>\n        <div className='menu'>\n          <div className='menu__item active' onClick={e => this.scrollToPage('.landing-page')}>\n            Home\n          </div>\n          <div className='menu__item' onClick={e => this.scrollToPage('.about-container')}>\n            About\n          </div>\n          <div className='menu__item' onClick={e => this.scrollToPage('.project-container')}>\n            Portfolio\n          </div>\n          <a style={{ textDecoration: 'none', color: colorPrimary }} href='/Jackson_s_CV.pdf'>\n            <div className='menu__item'>Resume</div>\n          </a>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNav.contextTypes = {\n  theme: PropTypes.any,\n  switchTheme: PropTypes.func,\n};\n\nexport default Nav;\n","import React from 'react';\nimport SocialIcons from '../../components/SocialIcons/SocialIcons';\nimport Nav from '../../components/Nav/Nav';\nimport './styles.scss';\nimport PropTypes from 'prop-types';\n\nconst LandingPage = (props, context) => {\n  const {\n    theme: { bgPrimary, colorPrimary },\n  } = context;\n  return (\n    <div style={{ backgroundColor: bgPrimary }} className='landing-page'>\n      <Nav />\n      <main style={{ color: colorPrimary }}>\n        {/* <BrowserNotes /> */}\n        <div className='intro-wrapper'>\n          <div className='intro-name'>Hello, I'm Jackson!</div>\n          <div className='tagline'>Full Stack Dev | Open-Source Enthusiast | VolleyBall Player</div>\n          <SocialIcons />\n        </div>\n      </main>\n      {/* <ScrollToNext pageSelector='.about-page' /> */}\n    </div>\n  );\n};\n\nLandingPage.contextTypes = {\n  theme: PropTypes.any,\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst PortfolioItem = (props, context) => {\n  const {\n    theme: { colorPrimary, textAlternate },\n  } = context;\n\n  if (props.render) return props.render;\n  else\n    return (\n      <div className='portfolio-item' style={{ backgroundColor: colorPrimary, color: textAlternate }}>\n        <div className='portfolio-item__info'>\n          <div className='portfolio-item__title'>{props.title}</div>\n\n          <div className='portfolio-item__desc'>{props.desc}</div>\n          <div className='portfolio-item__icon'>\n            {props.techStack}\n            <div className='portfolio-item__links'>\n              <a href={props.githubLink} style={{ color: textAlternate }}>\n                GitHub Repo\n              </a>\n              {props.liveLink ? (\n                <a href={props.liveLink} style={{ color: textAlternate }}>\n                  Live Demo\n                </a>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n\n          {/* <div className='portfolio-item__img'>\n            <img src={props.img} alt={props.title}></img>\n          </div> */}\n        </div>\n      </div>\n    );\n};\n\nPortfolioItem.contextTypes = {\n  theme: PropTypes.any,\n};\n\nexport default PortfolioItem;\n","import weQuest from '../../imgs/pjimage.jpg';\nimport Ritual from '../../imgs/not-ritual.png';\nimport Interview from '../../imgs/interview.png';\nimport Ruby from '../../imgs/ruby.png';\n\nexport default [\n  {\n    title: 'weQuest',\n    img: weQuest,\n    desc:\n      'weQuest is a community-driven app which affords users products on short-term rental. It strive reverses the traditional marketplace model in the sense that requesters get to dictate terms for each transaction through a reverse auction mechanism.',\n    techStack: 'React, Ionic 4, PostGreSQL, TypeScript, Express, Node',\n    githubLink: 'https://github.com/checksonhk/weQuest',\n    liveLink: 'https://weQuest.xyz',\n  },\n  {\n    title: '!Ritual',\n    img: Ritual,\n    desc:\n      'A web application for an online food ordering app. Developed on top of the user experience found on Ritual, and developed Restaurant side Interface for processing orders. Using Google’s location services efficiently to capture accurate location to provide accurate travel times and maps directions via Trello services',\n    techStack: 'JQuery, EJS, PostGreSQL, Node, Express',\n    githubLink: 'https://github.com/checksonhk/Midterm-Project',\n    liveLink: 'https://not-ritual.herokuapp.com',\n  },\n  {\n    title: 'Jungle',\n    img: Ruby,\n    desc:\n      'Jungle is a mini e-commerce application built with Rails 4.2 for purposes of learning Rails. Jungle was built with users in mind from the main catalog to each products detail page. Some special features of Jungle is its rating system, email confirmation capabilities, and authentication processes:',\n    techStack: 'Rails, Ruby, PostGreSQL',\n    githubLink: 'https://github.com/checksonhk/jungle',\n  },\n  {\n    title: 'Interview Scheduler',\n    img: Interview,\n    desc:\n      'Interview Scheduler is a simple, single page app built in React that allows a user to book, edit and cancel interviews. Using Web Sockets, concurrent users can see changes made by other users instantaneously.',\n    techStack: 'React, Express, PostGreSQL, Node',\n    githubLink: 'https://github.com/checksonhk/scheduler',\n    liveLink: 'https://fervent-wozniak-d33d68.netlify.com/',\n  },\n];\n","import React from 'react';\nimport { ButtonBack, ButtonNext, DotGroup, CarouselProvider, Slide, Slider } from 'pure-react-carousel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport PortfolioItem from '../PortfolioItem/PortfolioItem';\nimport PropTypes from 'prop-types';\nimport portfolioItems from '../PortfolioItem/portfolioitems';\n\nimport './styles.scss';\n\nconst ProjectCarousel = (props, context) => {\n  const {\n    theme: { bgPrimary, colorPrimary },\n  } = props.theme;\n\n  const renderPortfolioItem = (item, index) => {\n    return (\n      <Slide className='carousel__slide' index={index}>\n        <PortfolioItem\n          title={item.title}\n          img={item.img}\n          desc={item.desc}\n          techStack={item.techStack}\n          githubLink={item.githubLink}\n          liveLink={item.liveLink}\n        />\n      </Slide>\n    );\n  };\n\n  return (\n    <CarouselProvider visibleSlides={1} totalSlides={4} step={1} naturalSlideWidth={400} naturalSlideHeight={500} infinite>\n      <h1 className='carousel__headline'>Projects</h1>\n      <div className='carousel__container'>\n        <Slider className='carousel__slider'>{portfolioItems.map((item, index) => renderPortfolioItem(item, index))}</Slider>\n        <ButtonBack className='carousel__buttonBack'>\n          <FontAwesomeIcon icon={faAngleLeft} style={{ color: bgPrimary }} />\n        </ButtonBack>\n        <ButtonNext className='carousel__buttonNext'>\n          <FontAwesomeIcon icon={faAngleRight} style={{ color: bgPrimary }} />\n        </ButtonNext>\n      </div>\n    </CarouselProvider>\n  );\n};\n\nPortfolioItem.contextTypes = {\n  theme: PropTypes.any,\n};\n\nexport default ProjectCarousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProjectCarousel from '../../components/ProjectCarousel/ProjectCarousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport './styles.scss';\n\nconst techStack = ['JavaScript (ES6+)', 'React', 'Node.js', 'TypeScript', 'Python', 'PostGreSQL', 'Express', 'HTML & (S)CSS'];\n\nconst ProjectsPage = (props, context) => {\n  const {\n    theme: { bgPrimary, colorPrimary },\n  } = context;\n\n  return (\n    <div style={{ backgroundColor: bgPrimary }} className='project-page'>\n      <main style={{ color: colorPrimary }}>\n        <div className='about-container'>\n          <div>\n            <h1 className='about-title'>About Me</h1>\n            <p className='about-desc'>\n              Hard working web developer with a flair for creating elegant solutions in the least amount of time. I am passionate about\n              software architecture and using machine learning to improve quality of life.\n            </p>\n          </div>\n          <div className='about-desc'>\n            <p className='about-desc-text'> Technology I've recently used: </p>\n            <ul className='about-tech-stack'>\n              {techStack.map(tech => {\n                return (\n                  <li>\n                    <p>{tech}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n        <div className='project-container'>\n          <ProjectCarousel theme={context}></ProjectCarousel>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nProjectsPage.contextTypes = {\n  theme: PropTypes.any,\n};\n\nexport default ProjectsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst ParallaxBackground = (props, context) => {\n  const {\n    theme: { colorPrimary },\n  } = context;\n\n  return (\n    <div className='parallax' style={{ color: colorPrimary }}>\n      <div id='stars1' />\n      <div id='stars2' />\n      <div id='stars3' />\n    </div>\n  );\n};\n\nParallaxBackground.contextTypes = {\n  theme: PropTypes.any,\n};\n\nexport default ParallaxBackground;\n","const themes = [\n  {\n    name: 'blue',\n    firstTime: true,\n    colorPrimary: '#4ea9da',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#daedf7',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n  {\n    name: 'cyan',\n    firstTime: true,\n    colorPrimary: '#3dc0b0',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#d7f2ef',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n  {\n    name: 'blue-alt',\n    colorPrimary: '#FAFAFA',\n    colorAlternate: '#4ea9da',\n    colorHighlight: '#2a93cb',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(78, 169, 218, 0.75)',\n  },\n  {\n    name: 'cyan-alt',\n    colorPrimary: '#FAFAFA',\n    colorAlternate: '#3dc0b0',\n    colorHighlight: '#35a698',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(61, 192, 176, 0.75)',\n  },\n  {\n    name: 'green',\n    colorPrimary: '#5BA150',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#e1efdf',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n  {\n    name: 'brown',\n    colorPrimary: '#A26836',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#f5ebe2',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n  {\n    name: 'orange',\n    colorPrimary: '#e17421',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#f9e4d5',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n  {\n    name: 'crimson-red',\n    colorPrimary: '#e64f52',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#fbe4e4',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n  {\n    name: 'red',\n    colorPrimary: '#af3d4e',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#f6e4e7',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n  {\n    name: 'red-alt',\n    colorPrimary: '#FFFFFF',\n    colorAlternate: '#89303d',\n    colorHighlight: '#63232c',\n    textPrimary: '#FFFFFF',\n    navAlpha: 'rgba(137, 48, 61, 0.75)',\n  },\n  {\n    name: 'indigo-alt',\n    colorPrimary: '#FAFAFA',\n    colorAlternate: '#303F9F',\n    colorHighlight: '#242f78',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(48, 63, 159, 0.75)',\n  },\n  {\n    name: 'grey-alt',\n    colorPrimary: '#FFFFFF',\n    colorAlternate: '#485564',\n    colorHighlight: '#333c46',\n    textPrimary: '#FFFFFF',\n    navAlpha: 'rgba(72, 85, 100, 0.75)',\n  },\n  {\n    name: 'material-cyan',\n    colorPrimary: '#00BCD4',\n    colorAlternate: '#FFFFFF',\n    colorHighlight: '#d4faff',\n    textPrimary: '#212121',\n    navAlpha: 'rgba(255, 255, 255, 0.75)',\n  },\n  {\n    name: 'material-brown',\n    colorPrimary: '#845c4e',\n    colorAlternate: '#FFFFFF',\n    colorHighlight: '#eee6e3',\n    textPrimary: '#212121',\n    navAlpha: 'rgba(255, 255, 255, 0.75)',\n  },\n  {\n    name: 'material-grey',\n    firstTime: true,\n    colorPrimary: '#607D8B',\n    colorAlternate: '#FFFFFF',\n    colorHighlight: '#dfe6e9',\n    textPrimary: '#212121',\n    navAlpha: 'rgba(255, 255, 255, 0.75)',\n  },\n  {\n    name: 'material-grey-alt',\n    colorPrimary: '#FFFFFF',\n    colorAlternate: '#455A64',\n    colorHighlight: '#374850',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(69, 90, 100, 0.75)',\n  },\n];\n\nexport const getThemes = () => {\n  return themes.map(theme => {\n    return {\n      name: theme.name,\n      firstTime: theme.firstTime,\n      colorPrimary: theme.colorPrimary,\n      colorAlternate: theme.colorAlternate,\n      colorHighlight: theme.colorHighlight,\n      bgPrimary: theme.colorAlternate,\n      bgAlternate: theme.colorPrimary,\n      bgLanding: theme.colorPrimary,\n      textPrimary: theme.textPrimary,\n      textAlternate: theme.colorAlternate,\n      textLanding: theme.colorPrimary,\n      parallaxStars: theme.colorPrimary,\n      navAlpha: theme.navAlpha,\n    };\n  });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getThemes } from './themes';\n\nclass ThemeSwitcher extends Component {\n  constructor(props) {\n    super(props);\n    const allThemes = getThemes();\n    const firstTimeThemes = allThemes.filter(theme => theme.firstTime === true);\n\n    this.state = {\n      theme: firstTimeThemes[Math.floor(Math.random() * firstTimeThemes.length)],\n    };\n\n    this.switchTheme = this.switchTheme.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n      switchTheme: this.switchTheme,\n    };\n  }\n\n  getRandomTheme = () => {\n    const currentTheme = this.state.theme;\n    const allThemes = getThemes();\n    const themesWithoutCurrentTheme = allThemes.filter(theme => theme.name !== currentTheme.name);\n    const randomThemeIndex = Math.floor(Math.random() * themesWithoutCurrentTheme.length);\n    return themesWithoutCurrentTheme[randomThemeIndex];\n  };\n\n  switchTheme = () => {\n    const randomTheme = this.getRandomTheme();\n    this.setState({\n      theme: randomTheme,\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    const theme = this.state.theme;\n\n    return (\n      <div className='theme-switcher'>\n        <style jsx='true'>\n          {`\n            body {\n              background-color: ${theme.bgPrimary};\n              body,\n              h1,\n              h2,\n              h3,\n              h4,\n              h5,\n              h6,\n              p,\n              ol,\n              ul {\n                color: ${theme.textPrimary};\n              }\n            }\n          `}\n        </style>\n        {children}\n      </div>\n    );\n  }\n}\n\nThemeSwitcher.propTypes = {\n  children: PropTypes.node,\n};\n\nThemeSwitcher.childContextTypes = {\n  theme: PropTypes.any,\n  switchTheme: PropTypes.func,\n};\n\nexport default ThemeSwitcher;\n","import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport ProjectsPage from './pages/ProjectsPage/ProjectsPage';\nimport ParallaxBackground from './components/ParallaxBackground/ParallaxBackground';\nimport ThemeControl from './components/ThemeControl/ThemeControl';\n\nlibrary.add(fab, faCheckSquare);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='dev-landing-page'>\n        <ThemeControl>\n          <ParallaxBackground />\n          <LandingPage />\n          {/* <AboutPage /> */}\n          <ProjectsPage />\n          {/* <ScrollTop /> */}\n          {/* <Footer /> */}\n        </ThemeControl>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.scss';\nimport '@fortawesome/react-fontawesome';\nimport '@fortawesome/free-brands-svg-icons';\nimport 'typeface-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}